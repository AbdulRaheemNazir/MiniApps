        static void Optionfour()
        {
            try
            {

                Console.WriteLine("Square Root Calculator: ");
                Console.WriteLine("----------------------");
                Console.WriteLine("Please enter a positive number: ");
                int number = int.Parse(Console.ReadLine());

                bool validinteger = true;
                do
                {

                    validinteger = true;
                    Console.WriteLine("How many decimal places do you want the solution calculated to: ");
                    int numberofdecimalplaces = int.Parse(Console.ReadLine());
                    double upperbound = 0;
                    double startnumber = 1; // number to start counting p at

                    if (numberofdecimalplaces > 0 & numberofdecimalplaces < 7)
                    {
                        validinteger = false;

                        while (startnumber < number) // checks if startnumber is greater than the number being square rooted
                        {
                            upperbound = upperbound + 1; // adds 1 to the original number
                            startnumber = upperbound * upperbound; // squares original number

                        }

                        double lowerbound = upperbound - 1; // finds lowerbound
                        double avrgbound = (lowerbound + upperbound) / 2; // finds average
                        while (upperbound - lowerbound >= 0.000001)
                        { // checks what the difference between the bounds is to six decimal places as that is the most precise you can go
                            if (avrgbound * avrgbound > number)
                            {
                                upperbound = upperbound - (upperbound - lowerbound) / 2; // decreasing the number
                                avrgbound = (lowerbound + upperbound) / 2;


                            }
                            else
                            {
                                lowerbound = lowerbound + (upperbound - lowerbound) / 2; // increasing the number
                                avrgbound = (lowerbound + upperbound) / 2;

                            }
                        }
                        decimal aver = Convert.ToDecimal((upperbound + lowerbound) / 2);
                        decimal roundednumber = decimal.Round(aver, numberofdecimalplaces); // puts number to the correct number of decimal places

                        Console.WriteLine(roundednumber); // prints the squarerooted nuber
                    }



                    else
                    {
                        validinteger = false;
                        Console.WriteLine("Please enter a valid decimal");
                    }
                } while (!validinteger);

            }

            catch
            {
                Console.WriteLine("Invalid error");
                Optionfour();
            }

        }
    }
}
